<?php
namespace MultiShip\Tests\Carrier;


use MultiShip\Tests\BaseTestCase;

use SoapHeader;
use MultiShip\Configuration;
use MultiShip\Carrier\Ups;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-15 at 10:22:52.
 *
 * @covers MultiShip\Carrier\AbstractCarrier
 * @covers MultiShip\Carrier\Ups
 */
class UpsTest extends BaseTestCase
{
    /**
     * @var Configuration
     */
    protected $configuration;

    /**
     * @var Ups
     */
    protected $object;

    protected function setUp()
    {
        $this->configuration = new Configuration();
        $this->configuration->setUserId( 98100 );
        $this->configuration->setPassword( 'ups_password' );
        $this->configuration->setAccessKey( 'aCC3$$' );

        $this->object = new Ups( $this->configuration );
    }

    /**
     * @covers MultiShip\Carrier\Ups::getSoapHeader
     */
    public function testGetSoapHeader()
    {
        $expected = new SoapHeader(
            'http://www.ups.com/XMLSchema/XOLTWS/UPSS/v1.0',
            'UPSSecurity',
            array(
                 'UsernameToken'      => array(
                     'Username' => $this->configuration->getUserId(),
                     'Password' => $this->configuration->getPassword()
                 ),
                 'ServiceAccessToken' => array(
                     'AccessLicenseNumber' => $this->configuration->getAccessKey()
                 )
            )
        );

        $this->assertEquals( $expected, $this->object->getSoapHeader() );
    }

    /**
     * @covers MultiShip\Carrier\Ups::getRateRequest
     */
    public function testGetRateRequest()
    {
        $this->assertInstanceOf( '\MultiShip\Carrier\Ups\Rate', $this->object->getRateRequest() );
    }

    /**
     * @covers MultiShip\Carrier\Ups::getSimpleRateRequest
     */
    public function testGetSimpleRateRequest()
    {
        $this->assertInstanceOf( '\MultiShip\Carrier\Ups\SimpleRate', $this->object->getSimpleRateRequest() );
    }
}

?>