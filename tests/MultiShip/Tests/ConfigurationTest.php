<?php
namespace MultiShip\Tests;


use MultiShip\Tests\BaseTestCase;

use MultiShip\Configuration;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-05 at 23:02:52.
 */
class ConfigurationTest extends BaseTestCase
{
    /**
     * @var Configuration
     */
    protected $object;

    protected function setUp()
    {
        $this->object = new Configuration();
        $this->object->setAccessKey( "ABC1234DE56789FH0" );
        $this->object->setAccountNumber( "510000002" );
        $this->object->setMeterNumber( "119118117" );
        $this->object->setUserId( "multiship" );
        $this->object->setPassword( "SuperSecretPassword!" );
        $this->object->setWsdl( "../local/path/to/schema/wsdl/carrier/filename.wsdl" );
        $this->object->setEndPointUrl( 'https://www.multishipphp.net/webservices' );
    }

    /**
     * @covers \MultiShip\Configuration::setAccessKey
     */
    public function testSetAccessKey()
    {
        $this->object->setAccessKey( '1234ABCD890' );

        $this->assertNotNull( $this->object->getAccessKey() );
        $this->assertEquals( '1234ABCD890', $this->object->getAccessKey() );
    }

    /**
     * @covers \MultiShip\Configuration::getAccessKey
     */
    public function testGetAccessKey()
    {
        $this->assertNotNull( $this->object->getAccessKey() );
        $this->assertEquals( 'ABC1234DE56789FH0', $this->object->getAccessKey() );
    }

    /**
     * @covers \MultiShip\Configuration::setEndPointUrl
     */
    public function testSetEndPointUrl()
    {
        $this->object->setEndPointUrl( 'https://www.upsorfedex.com/webservices' );

        $this->assertNotNull( $this->object->getEndPointUrl() );
        $this->assertEquals( 'https://www.upsorfedex.com/webservices', $this->object->getEndPointUrl() );
    }

    /**
     * @covers \MultiShip\Configuration::getEndPointUrl
     */
    public function testGetEndPointUrl()
    {
        $this->assertNotNull( $this->object->getEndPointUrl() );
        $this->assertEquals( 'https://www.multishipphp.net/webservices', $this->object->getEndPointUrl() );
    }

    /**
     * @covers \MultiShip\Configuration::setPassword
     */
    public function testSetPassword()
    {
        $this->object->setPassword( 'NotTheSameAsTheUsername' );

        $this->assertNotNull( $this->object->getPassword() );
        $this->assertEquals( 'NotTheSameAsTheUsername', $this->object->getPassword() );
    }

    /**
     * @covers \MultiShip\Configuration::getPassword
     */
    public function testGetPassword()
    {
        $this->assertNotNull( $this->object->getPassword() );
        $this->assertEquals( 'SuperSecretPassword!', $this->object->getPassword() );
    }

    /**
     * @covers \MultiShip\Configuration::setUserId
     */
    public function testSetUserId()
    {
        $this->object->setUserId( 'your_username' );

        $this->assertNotNull( $this->object->getUserId() );
        $this->assertEquals( 'your_username', $this->object->getUserId() );
    }

    /**
     * @covers \MultiShip\Configuration::getUserId
     */
    public function testGetUserId()
    {
        $this->assertNotNull( $this->object->getUserId() );
        $this->assertEquals( 'multiship', $this->object->getUserId() );
    }

    /**
     * @covers \MultiShip\Configuration::setAccountNumber
     */
    public function testSetAccountNumber()
    {
        $this->object->setAccountNumber( '611000002' );

        $this->assertNotNull( $this->object->getAccountNumber() );
        $this->assertEquals( '611000002', $this->object->getAccountNumber() );
    }

    /**
     * @covers \MultiShip\Configuration::getAccountNumber
     */
    public function testGetAccountNumber()
    {
        $this->assertNotNull( $this->object->getAccountNumber() );
        $this->assertEquals( '510000002', $this->object->getAccountNumber() );
    }

    /**
     * @covers \MultiShip\Configuration::setMeterNumber
     */
    public function testSetMeterNumber()
    {
        $this->object->setMeterNumber( '911771871' );

        $this->assertNotNull( $this->object->getMeterNumber() );
        $this->assertEquals( '911771871', $this->object->getMeterNumber() );
    }

    /**
     * @covers \MultiShip\Configuration::getMeterNumber
     */
    public function testGetMeterNumber()
    {
        $this->assertNotNull( $this->object->getMeterNumber() );
        $this->assertEquals( '119118117', $this->object->getMeterNumber() );
    }

    /**
     * @covers \MultiShip\Configuration::setWsdl
     */
    public function testSetWsdl()
    {
        $this->object->setWsdl( "../some/path/to/a/schema/wsdl/filename.wsdl" );

        $this->assertNotNull( $this->object->getWsdl() );
        $this->assertEquals( "../some/path/to/a/schema/wsdl/filename.wsdl", $this->object->getWsdl() );
    }

    /**
     * @covers \MultiShip\Configuration::getWsdl
     */
    public function testGetWsdl()
    {
        $this->assertNotNull( $this->object->getWsdl() );
        $this->assertEquals( "../local/path/to/schema/wsdl/carrier/filename.wsdl", $this->object->getWsdl() );
    }
}

?>