<?php

/*
 * This file is part of the MultiShip package.
 *
 * (c) 2013 Fraser Reed
 *      <fraser.reed@gmail.com>
 *      github.com/fraserreed
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace MultiShip\Tests\Carrier;


use MultiShip\Tests\BaseTestCase;

use MultiShip\Charge\BaseCharge;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-15 at 10:22:52.
 *
 * @covers MultiShip\Charge\AbstractCharge
 * @covers MultiShip\Charge\BaseCharge
 */
class BaseChargeTest extends BaseTestCase
{

    /**
     * @var BaseCharge
     */
    protected $object;

    protected function setUp()
    {
        $this->object = new BaseCharge();
        $this->object->setCurrencyCode( 'USD' );
        $this->object->setValue( 99.15 );
        $this->object->setNegative( false );
    }

    /**
     * @covers MultiShip\Charge\BaseCharge::getChargeType
     */
    public function testGetChargeType()
    {
        $this->assertEquals( 'Base', $this->object->getChargeType() );
    }

    /**
     * @covers MultiShip\Charge\BaseCharge::setCurrencyCode
     */
    public function testSetCurrencyCode()
    {
        $this->object->setCurrencyCode( 'CAD' );

        $this->assertNotNull( $this->object->getCurrencyCode() );
        $this->assertEquals( 'CAD', $this->object->getCurrencyCode() );
    }

    /**
     * @covers MultiShip\Charge\BaseCharge::getCurrencyCode
     */
    public function testGetCurrencyCode()
    {
        $this->assertNotNull( $this->object->getCurrencyCode() );
        $this->assertEquals( 'USD', $this->object->getCurrencyCode() );
    }

    /**
     * @covers MultiShip\Charge\BaseCharge::setValue
     */
    public function testSetValue()
    {
        $this->object->setValue( 128.01 );

        $this->assertNotNull( $this->object->getValue() );
        $this->assertEquals( 128.01, $this->object->getValue() );
    }

    /**
     * @covers MultiShip\Charge\BaseCharge::getValue
     */
    public function testGetValue()
    {
        $this->assertNotNull( $this->object->getValue() );
        $this->assertEquals( 99.15, $this->object->getValue() );
    }

    /**
     * @covers MultiShip\Charge\BaseCharge::setNegative
     */
    public function testSetNegative()
    {
        $this->object->setNegative( true );

        $this->assertNotNull( $this->object->getNegative() );
        $this->assertTrue( $this->object->getNegative() );
    }

    /**
     * @covers MultiShip\Charge\BaseCharge::getNegative
     */
    public function testGetNegative()
    {
        $this->assertNotNull( $this->object->getNegative() );
        $this->assertFalse( $this->object->getNegative() );
    }
}

?>