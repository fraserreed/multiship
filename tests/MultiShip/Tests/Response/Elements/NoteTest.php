<?php

namespace MultiShip\Tests\Response\Elements;


use MultiShip\Tests\BaseTestCase;

use MultiShip\Response\Elements\Note;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-15 at 10:22:52.
 *
 * @covers MultiShip\Response\Elements\Note
 */
class NoteTest extends BaseTestCase
{
    /**
     * @var Note
     */
    protected $object;

    protected function setUp()
    {
        $this->object = new Note();
        $this->object->setId( 1209 );
        $this->object->setCode( 'SUCCESS' );
        $this->object->setDescription( 'The request was successful.' );
    }

    /**
     * @covers \MultiShip\Response\Elements\Note::getId
     */
    public function testGetId()
    {
        $this->assertNotNull( $this->object->getId() );
        $this->assertEquals( 1209, $this->object->getId() );
    }

    /**
     * @covers \MultiShip\Response\Elements\Note::setId
     */
    public function testSetId()
    {
        $this->object->setId( 2388 );

        $this->assertNotNull( $this->object->getId() );
        $this->assertEquals( 2388, $this->object->getId() );
    }

    /**
     * @covers \MultiShip\Response\Elements\Note::getCode
     */
    public function testGetCode()
    {
        $this->assertNotNull( $this->object->getCode() );
        $this->assertEquals( 'SUCCESS', $this->object->getCode() );
    }

    /**
     * @covers \MultiShip\Response\Elements\Note::setCode
     */
    public function testSetCode()
    {
        $this->object->setCode( 'ERROR' );

        $this->assertNotNull( $this->object->getCode() );
        $this->assertEquals( 'ERROR', $this->object->getCode() );
    }

    /**
     * @covers \MultiShip\Response\Elements\Note::getDescription
     */
    public function testGetDescription()
    {
        $this->assertNotNull( $this->object->getDescription() );
        $this->assertEquals( 'The request was successful.', $this->object->getDescription() );
    }

    /**
     * @covers \MultiShip\Response\Elements\Note::setDescription
     */
    public function testSetDescription()
    {
        $this->object->setDescription( 'There was an error with this call.' );

        $this->assertNotNull( $this->object->getDescription() );
        $this->assertEquals( 'There was an error with this call.', $this->object->getDescription() );
    }
}

?>